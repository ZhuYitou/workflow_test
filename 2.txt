template<class T>
void MyCards<T>::Show() {
    cout<<ans_num<<endl;
    if(ans_num!=0) {
        for (int i = ans_num - 1; i > 0; --i) {
            cout << ans[i] << ' ';
        }
        cout << ans[0];
    }else{
        cout<<"WIN";
    }
}

int main() {
    int kind = 0;
    cin >> kind;

    int num[MaxSize] = {};
    char letter[MaxSize] = {};

    cin.clear();
    cin.ignore();

    string input;
    getline(cin, input);
    int input_num =0;

    if (kind == 1) {//1-13
        int index =0;
        while(index<(int) input.length()) {
            if(input[index]!=' ') {
                num[input_num] = num[input_num] * 10 + ((unsigned char) input[index] - '0');
            }else{
                input_num++;
            }
            index++;
        }
        input_num++;

//        for (int i = 0; i < input_num; ++i) {
//            cout << num[i] << ' ';
//        }
//        cout<<endl;

        MyCards<int> myCards(num, input_num);
        myCards.Match();
        myCards.Show();
    } else {//A-M
        input_num = ((int) input.length() + 1) / 2;

        for (int i = 0; i < input_num; ++i) {
            letter[i] = input[i * 2];
        }
        MyCards<char> myCards(letter, input_num);
        myCards.Match();
        myCards.Show();
    }

    return 0;
}
